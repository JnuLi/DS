library(reticulate)
library(reticulate)
library(reticulate)
library(reticulate)
library(reticulate)
use_python("C:\Users\wjtt1\Miniconda3\python.exe")
library(reticulate)
use_python("C:/Users/wjtt1/Miniconda3/python.exe")
reticulate::repl_python()
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
print('我')
quit
print('我')
reticulate::repl_python()
print('我')
print(u'我')
print(u'我')
print(u'我')
Sys.setlocale(category = "LC_ALL",local="chinese")
Sys.setlocale(category = "LC_ALL",local="chinese")
print('我')
quit
Sys.setlocale(category = "LC_ALL",local="chinese")
Sys.setlocale(category = "LC_ALL",local="chinese")
library(reticulate)
use_python("C:/Users/wjtt1/Miniconda3/python.exe")
reticulate::repl_python()
print('注释')
print('注释')
exit()
quit
---
documentclass: ctexart
output: rticles::ctex
---
# Python 中的科学计算工具
library(reticulate)
library(reticulate)
library(reticulate)
options(digits = 4)
fit = lm(dist ~ speed, data = cars)
coef(summary(fit))
b = coef(fit)
par(mar = c(4, 4, .1, .1), las = 1)
plot(cars, pch = 19)
abline(fit, col = 'red')
library(reticulate)
knitr::opts_chunk$set(python.reticulate=FALSE)
library(reticulate)
knitr::opts_chunk$set(python.reticulate=True)
library(reticulate)
knitr::opts_chunk$set(python.reticulate=Ture)
library(reticulate)
knitr::opts_chunk$set(python.reticulate=True)
library(reticulate)
knitr::opts_chunk$set(python.reticulate=TRUE)
library(reticulate)
knitr::opts_chunk$set(python.reticulate::eng_python)
library(reticulate)
knitr::opts_chunk$set(python.reticulate::eng_python)
library(reticulate)
knitr::opts_chunk$set(python.reticulate::eng_python)
library(reticulate)
knitr::knit_engines$set(python.reticulate::eng_python)
library(reticulate)
knitr::knit_engines$set(python.reticulate::eng_python)
library(reticulate)
knitr::knit_engines$set(python=reticulate::eng_python)
includeHTML
Sys.setlocale()
library(reticulate)
libpaths()
.libpaths()
library(reticulate)
library(reticulate)
'中文出来吧'
'中文出来吧'
'中文出来吧'
'中文出来吧'
'中文出来吧'
library(reticulate)
detach("package:reticulate", unload = TRUE)
py_config()
library(reticulate)
use_condaenv("relevantenv")
py_discover_config()
library(reticulate)
use_virtualenv("r-reticulate")
library(reticulate)
use_python("C:\Users\wjtt1\Miniconda3\python.exe", required = TRUE)
library(reticulate)
use_python("C:\\Users\wjtt1\Miniconda3\python.exe", required = TRUE)
library(reticulate)
use_python("C:/Users/wjtt1/Miniconda3/python.exe", required = TRUE)
library(tidyverse)
#library(tidyverse)
library(reticulate)
# 使用するPythonを指定
reticulate::use_python(
python = reticulate:::python_unix_binary(bin = "python3.6"),
required = TRUE
)
#library(tidyverse)
library(reticulate)
# 使用するPythonを指定
# Pythonライブラリのインポート
pd <- reticulate::import(module = "pandas")
datasets <- reticulate::import(module = "sklearn.datasets")
# scikit-learnのデータセットからirisデータをロード
sklearn_iris <- datasets$load_iris()
# データセットをPandasデータフレームに変換
# import関数のデフォルト設定では対応するRオブジェクト（この場合はデータフレーム）に自動的に変換
pd_sklearn_iris <- pd$DataFrame(
data = sklearn_iris$data, columns = sklearn_iris$feature_names
)
# Pandasデータフレームに変換し直してPandasのheadメソッドで一部表示
reticulate::r_to_py(x = pd_sklearn_iris)$head(n = 5L)
library(reticulate)
knitr::opts_chunk$set(
echo = TRUE,      # Output code chunks
message = FALSE,  # Toggle off message output
warning = FALSE)
library(reticulate)
knitr::opts_chunk$set(
echo = TRUE,      # Output code chunks
message = TRUE,  # Toggle off message output
warning = FALSE)
library(reticulate)
knitr::opts_chunk$set(
echo = TRUE,      # Output code chunks
message = TRUE,  # Toggle off message output
warning = TRUE)
library(reticulate)
py_run_string('import umap')
library(reticulate)
py_run_string('import umap')
library(reticulate)
py_run_string('import umap')
library(reticulate)
library(reticulate)
library("knitr")
library(reticulate)
reticulate::import_from_path
library(reticulate)
py_discover_config()
load("C:/Users/wjtt1/Desktop/book/.RData")
